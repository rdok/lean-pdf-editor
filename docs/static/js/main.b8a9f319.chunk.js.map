{"version":3,"sources":["components/navbar/Navbar.js","components/pagination/Pagination.js","components/viewer/Viewer.js","services/Saver.js","components/saver/Saver.js","components/file/File.js","components/range-remover/RangeRemover.js","components/outliner/Outliner.js","App.js","serviceWorker.js","index.js"],"names":["className","Navbar","bg","variant","Brand","href","pageNumber","numPages","goToPreviousPage","goToNextPage","onPageRangeChange","pageNumberLabel","Container","Button","disabled","onClick","Col","md","Form","Control","type","custom","min","max","defaultValue","onChange","Viewer","props","onDocumentLoadSuccess","setState","bind","handlePageRangeChange","handleOutlineItemClicked","this","file","onViewUpdated","e","Number","target","value","pageIndex","render","data","Uint8Array","buffer","fluid","onLoadSuccess","Row","sm","onItemClick","key","Component","Saver","getCurrentOutline","a","pdfjs","getDocument","promise","pdf","getOutline","outline","map","title","index","getPageRefs","pdfDoc","refs","catalog","Pages","traverse","kid","ref","PDFPageLeaf","push","createOutlineItem","parent","nextOrPrev","page","isLast","array","PDFArray","withContext","context","PDFName","of","PDFNull","Map","set","Title","PDFString","Parent","PDFDict","fromMapWithContext","normalizeNewOutline","item","newOutline","createOutlineItems","outlinesDictRef","pageRefs","save","PDFDocument","load","length","nextRef","outlineItems","outlinesDictMap","Type","PDFNumber","outlinesDict","assign","forEach","addOutlineItem","prepareDownload","inputPdf","create","outputPdf","copyPages","getPageIndices","addPage","newFile","saver","useState","isProcessing","setProcessing","handleDownload","name","downloadjs","onFileAttached","filename","File","label","onPagesRemoval","validated","setValidated","startPage","setStartPage","endPage","setEndPage","handleSubmit","event","preventDefault","form","currentTarget","formIsValid","checkValidity","payload","startIndex","endIndex","noValidate","onSubmit","placeholder","required","onOutlinerUpdated","String","App","state","minPage","handleFileAttached","handlePagesRemoval","handleViewUpdated","handleOutlinerUpdated","fetch","then","res","arrayBuffer","getPageCount","files","maxIndex","removePage","newData","totalPages","newPageNumber","Math","React","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8a9f319.chunk.js","sourcesContent":["import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\n\nimport \"./Navbar.scss\";\n\nexport default () => {\n  return (\n    <div className=\"NavBar\">\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Lean PDF Editor</Navbar.Brand>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nimport \"./Pagination.scss\";\nimport Col from \"react-bootstrap/Col\";\n\nexport default ({\n  pageNumber,\n  numPages,\n  goToPreviousPage,\n  goToNextPage,\n  onPageRangeChange,\n}) => {\n  const pageNumberLabel = (\n    <span>\n      Page {pageNumber || (numPages ? 1 : \"--\")} of {numPages || \"--\"}\n    </span>\n  );\n  return (\n    <Container className=\"Pagination\">\n      <div className=\"d-flex justify-content-between\">\n        <Button\n          variant=\"info\"\n          disabled={pageNumber <= 1}\n          className=\"float-left\"\n          onClick={goToPreviousPage}\n        >\n          Previous\n        </Button>\n        <Col md={6}>\n          <Form.Control\n            type=\"range\"\n            custom\n            min={1}\n            max={numPages}\n            defaultValue={pageNumber}\n            onChange={onPageRangeChange}\n          />\n        </Col>\n        <Col> {pageNumberLabel} </Col>\n        <Button\n          variant=\"info\"\n          disabled={pageNumber >= numPages}\n          onClick={goToNextPage}\n        >\n          Next\n        </Button>\n      </div>\n    </Container>\n  );\n};\n","import React, { Component } from \"react\";\nimport { Document, Outline, Page } from \"react-pdf/dist/umd/entry.webpack\";\nimport \"react-pdf/dist/esm/Page/AnnotationLayer.css\";\n\nimport Pagination from \"../pagination/Pagination\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nimport \"./Viewer.scss\";\n\nexport default class Viewer extends Component {\n  constructor(props) {\n    super(props);\n    this.goToPreviousPage = this.goToPreviousPage.bind(this);\n    this.goToNextPage = this.goToNextPage.bind(this);\n    this.handlePageRangeChange = this.handlePageRangeChange.bind(this);\n    this.handleOutlineItemClicked = this.handleOutlineItemClicked.bind(this);\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  };\n\n  onItemClick({ pageNumber }) {\n    this.setState({ pageNumber });\n  }\n\n  goToPreviousPage() {\n    const pageNumber = this.props.file.pageNumber - 1;\n    this.props.onViewUpdated({ pageNumber });\n  }\n\n  goToNextPage() {\n    const pageNumber = this.props.file.pageNumber + 1;\n    this.props.onViewUpdated({ pageNumber });\n  }\n\n  handlePageRangeChange(e) {\n    const pageNumber = Number(e.target.value);\n    this.props.onViewUpdated({ pageNumber });\n  }\n\n  handleOutlineItemClicked({ pageIndex, pageNumber }) {\n    this.props.onViewUpdated({ pageNumber });\n  }\n\n  render() {\n    const { file } = this.props;\n    const { numPages, pageNumber, data } = file;\n    let render;\n\n    if (data instanceof Uint8Array) {\n      render = data.buffer;\n    } else {\n      render = data;\n    }\n\n    return (\n      <div>\n        <Container fluid className=\"Viewer__container__document\">\n          <Document file={render} onLoadSuccess={this.onDocumentLoadSuccess}>\n            <Row>\n              <Col md={4} sm={4}>\n                <h5>Outline</h5>\n                <Outline\n                  onItemClick={this.handleOutlineItemClicked}\n                  className=\"list-group\"\n                />\n              </Col>\n              <Col md={8} sm={8}>\n                <Pagination\n                  pageNumber={pageNumber}\n                  numPages={numPages}\n                  goToNextPage={this.goToNextPage}\n                  goToPreviousPage={this.goToPreviousPage}\n                  onPageRangeChange={this.handlePageRangeChange}\n                />\n                <Page key={`page_${pageNumber}`} pageNumber={pageNumber} />\n              </Col>\n            </Row>\n          </Document>\n        </Container>\n      </div>\n    );\n  }\n}\n","import { pdfjs } from \"react-pdf/dist/umd/entry.webpack\";\nimport {\n  PDFArray,\n  PDFDict,\n  PDFDocument,\n  PDFName,\n  PDFNull,\n  PDFNumber,\n  PDFPageLeaf,\n  PDFString,\n} from \"pdf-lib\";\n\nexport default class Saver {\n  getCurrentOutline = async (file) => {\n    const pdf = await pdfjs.getDocument({ data: file.data }).promise;\n    const outline = (await pdf.getOutline()) ?? [];\n    return outline.map((title, index) => {\n      return { index, title: title.title };\n    });\n  };\n\n  getPageRefs = (pdfDoc) => {\n    const refs = [];\n    pdfDoc.catalog.Pages().traverse((kid, ref) => {\n      if (kid instanceof PDFPageLeaf) refs.push(ref);\n    });\n    return refs;\n  };\n\n  createOutlineItem = (\n    pdfDoc,\n    title,\n    parent,\n    nextOrPrev,\n    page,\n    isLast = false\n  ) => {\n    let array = PDFArray.withContext(pdfDoc.context);\n    array.push(page);\n    array.push(PDFName.of(\"XYZ\"));\n    array.push(PDFNull);\n    array.push(PDFNull);\n    array.push(PDFNull);\n    const map = new Map();\n    map.set(PDFName.Title, PDFString.of(title));\n    map.set(PDFName.Parent, parent);\n    map.set(PDFName.of(isLast ? \"Prev\" : \"Next\"), nextOrPrev);\n    map.set(PDFName.of(\"Dest\"), array);\n\n    return PDFDict.fromMapWithContext(map, pdfDoc.context);\n  };\n\n  normalizeNewOutline = async ({ file, item }) => {\n    let newOutline = await this.getCurrentOutline(file);\n    newOutline[item.index] = item;\n    return newOutline;\n  };\n\n  createOutlineItems = (outline, refs, pdfDoc, outlinesDictRef, pageRefs) => {\n    return outline.map(({ index, title }) => {\n      const isLast = typeof outline[index + 1] === \"undefined\";\n      let nextOrPrev;\n      if (isLast) {\n        const refIndex = index === 0 ? 0 : index - 1;\n        nextOrPrev = refs[refIndex];\n      } else {\n        nextOrPrev = refs[index + 1];\n      }\n\n      return this.createOutlineItem(\n        pdfDoc,\n        title,\n        outlinesDictRef,\n        nextOrPrev,\n        pageRefs[index],\n        isLast\n      );\n    });\n  };\n\n  save = async ({ file }, outline) => {\n    if (!outline) {\n      outline = await this.getCurrentOutline(file);\n    }\n\n    const pdfDoc = await PDFDocument.load(file.data);\n\n    if (outline.length === 0) {\n      return await pdfDoc.save();\n    }\n\n    const pageRefs = this.getPageRefs(pdfDoc);\n    const outlinesDictRef = pdfDoc.context.nextRef();\n    const refs = outline.map(() => pdfDoc.context.nextRef());\n    const outlineItems = this.createOutlineItems(\n      outline,\n      refs,\n      pdfDoc,\n      outlinesDictRef,\n      pageRefs\n    );\n\n    const outlinesDictMap = new Map();\n    outlinesDictMap.set(PDFName.Type, PDFName.of(\"Outlines\"));\n    outlinesDictMap.set(PDFName.of(\"First\"), refs[0]);\n    outlinesDictMap.set(PDFName.of(\"Last\"), refs[refs.length - 1]);\n    outlinesDictMap.set(PDFName.of(\"Count\"), PDFNumber.of(refs.length));\n\n    pdfDoc.catalog.set(PDFName.of(\"Outlines\"), outlinesDictRef);\n    const outlinesDict = PDFDict.fromMapWithContext(\n      outlinesDictMap,\n      pdfDoc.context\n    );\n    pdfDoc.context.assign(outlinesDictRef, outlinesDict);\n\n    refs.forEach((item, index) => {\n      pdfDoc.context.assign(refs[index], outlineItems[index]);\n    });\n\n    return await pdfDoc.save();\n  };\n\n  addOutlineItem = async ({ file, item }) => {\n    const outline = await this.normalizeNewOutline({ file, item });\n\n    return this.save({ file }, outline);\n  };\n\n  prepareDownload = async ({ file }) => {\n    const outline = await this.getCurrentOutline(file);\n\n    const inputPdf = await PDFDocument.load(file.data);\n    const outputPdf = await PDFDocument.create();\n    const copiedPages = await outputPdf.copyPages(\n      inputPdf,\n      inputPdf.getPageIndices()\n    );\n\n    copiedPages.forEach((page) => {\n      outputPdf.addPage(page);\n    });\n\n    let newFile = file;\n    newFile.data = await outputPdf.save();\n    return this.save({ file: newFile }, outline);\n  };\n}\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport downloadjs from \"downloadjs\";\n\nimport \"./Saver.scss\";\nimport Saver from \"../../services/Saver\";\n\nconst saver = new Saver();\n\nexport default ({ file }) => {\n  const [isProcessing, setProcessing] = useState(false);\n\n  const handleDownload = async (e) => {\n    setProcessing(true);\n    const { name } = file;\n    const data = await saver.prepareDownload({ file });\n    downloadjs(data, name, \"application/pdf\");\n    setProcessing(false);\n  };\n\n  return (\n    <div className=\"Saver\">\n      <Button\n        variant=\"primary\"\n        onClick={handleDownload}\n        disabled={isProcessing}\n      >\n        {isProcessing ? \"Processing...\" : \"Save\"}\n      </Button>\n    </div>\n  );\n};\n","import Form from \"react-bootstrap/Form\";\nimport React from \"react\";\n\nimport \"./File.scss\";\n\nexport default ({ file, onFileAttached }) => {\n  const filename = file ? file.name : \"\";\n\n  return (\n    <div className=\"File\">\n      <h2>File</h2>\n      <Form>\n        <Form.File label={filename} custom onChange={onFileAttached} />\n      </Form>\n    </div>\n  );\n};\n","import Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport React, { useState } from \"react\";\n\nimport \"./RangeRemover.scss\";\n\nexport default ({ file, onPagesRemoval }) => {\n  const [validated, setValidated] = useState(false);\n  const [startPage, setStartPage] = useState(1);\n  const [endPage, setEndPage] = useState(1);\n  const [isProcessing, setProcessing] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formIsValid = form.checkValidity() === true;\n    setValidated(true);\n\n    if (formIsValid) {\n      setProcessing(true);\n      const payload = {\n        startIndex: Number(startPage) - 1,\n        endIndex: Number(endPage) - 1,\n      };\n      await onPagesRemoval(payload);\n      setProcessing(false);\n    }\n  };\n\n  function handlePageStartChange({ target }) {\n    setStartPage(target.value);\n  }\n\n  function handlePageEndChange({ target }) {\n    setEndPage(target.value);\n  }\n\n  return (\n    <Form\n      noValidate\n      validated={validated}\n      onSubmit={handleSubmit}\n      className=\"RangeRemover\"\n    >\n      <h5>Range remover</h5>\n      <Row>\n        <Col>\n          <Form.Control\n            type=\"number\"\n            min=\"1\"\n            max={file.numPages}\n            placeholder=\"Page start\"\n            value={startPage}\n            onChange={handlePageStartChange}\n            required\n          />\n        </Col>\n        <Col>\n          <Form.Control\n            type=\"number\"\n            min={startPage}\n            max={file.numPages}\n            value={endPage}\n            onChange={handlePageEndChange}\n            placeholder=\"Page end\"\n            required\n          />\n        </Col>\n        <Button variant=\"warning\" type=\"submit\" disabled={isProcessing}>\n          {isProcessing ? \"Processing...\" : \"Remove\"}\n        </Button>\n      </Row>\n    </Form>\n  );\n};\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./Outliner.scss\";\nimport Saver from \"../../services/Saver\";\n\nconst saver = new Saver();\n\nexport default ({ file, onOutlinerUpdated }) => {\n  const [validated, setValidated] = useState(false);\n  const [isProcessing, setProcessing] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const formIsValid = form.checkValidity() === true;\n    setValidated(true);\n\n    if (formIsValid) {\n      setProcessing(true);\n      const item = {\n        index: file.pageNumber - 1,\n        title: String(form.title.value),\n      };\n      const data = await saver.addOutlineItem({ file, item });\n      onOutlinerUpdated({ data });\n      setProcessing(false);\n    }\n  }\n\n  return (\n    <Form\n      className=\"Outliner\"\n      onSubmit={handleSubmit}\n      noValidate\n      validated={validated}\n    >\n      <h5>Bookmark</h5>\n      <Row>\n        <Col>\n          <Form.Control\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"Title\"\n            defaultValue=\"test\"\n            required\n          />\n        </Col>\n        <Button variant=\"warning\" type=\"submit\">\n          {isProcessing ? \"Processing...\" : \"Apply\"}\n        </Button>\n      </Row>\n    </Form>\n  );\n};\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Col from \"react-bootstrap/Col\";\n\nimport Navbar from \"./components/navbar/Navbar\";\nimport Viewer from \"./components/viewer/Viewer\";\nimport Saver from \"./components/saver/Saver\";\nimport File from \"./components/file/File\";\n\nimport RangeRemover from \"./components/range-remover/RangeRemover\";\nimport Outliner from \"./components/outliner/Outliner\";\n\nimport \"./App.scss\";\n\nconst INITIAL_PAGE_NUMBER = 1;\n\nexport default class App extends React.Component {\n  state = {\n    file: {\n      name: \"./sample.pdf\",\n      data: null,\n      numPages: null,\n      pageNumber: INITIAL_PAGE_NUMBER,\n      minPage: 0,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleFileAttached = this.handleFileAttached.bind(this);\n    this.handlePagesRemoval = this.handlePagesRemoval.bind(this);\n    this.handleViewUpdated = this.handleViewUpdated.bind(this);\n    this.handleOutlinerUpdated = this.handleOutlinerUpdated.bind(this);\n  }\n\n  async componentDidMount() {\n    const { name } = this.state.file;\n    const data = await fetch(name).then((res) => res.arrayBuffer());\n    const pdfDoc = await PDFDocument.load(data);\n    const numPages = pdfDoc.getPageCount();\n    this.setState({\n      file: { name, data, numPages, pageNumber: INITIAL_PAGE_NUMBER },\n    });\n  }\n\n  async handleFileAttached(e) {\n    const file = e.target.files[0];\n    const name = file.name;\n    const data = await file.arrayBuffer();\n    const pdfDoc = await PDFDocument.load(data);\n    const numPages = pdfDoc.getPageCount();\n    const pageNumber = INITIAL_PAGE_NUMBER;\n\n    this.setState({ file: { name, data, pageNumber, numPages } });\n  }\n\n  async handlePagesRemoval({ startIndex, endIndex }) {\n    const { name, data, pageNumber } = this.state.file;\n    const pdfDoc = await PDFDocument.load(data);\n\n    let index = startIndex;\n    let maxIndex = endIndex;\n    while (index <= maxIndex) {\n      pdfDoc.removePage(maxIndex);\n      maxIndex--;\n    }\n    const newData = await pdfDoc.save();\n    const totalPages = pdfDoc.getPageCount();\n    const newPageNumber = Math.min(totalPages, pageNumber);\n\n    this.setState({\n      file: {\n        name,\n        data: newData,\n        pageNumber: newPageNumber,\n        numPages: totalPages,\n      },\n    });\n  }\n\n  handleOutlinerUpdated({ data }) {\n    const { file } = this.state;\n    file.data = data;\n    this.setState({ file });\n  }\n\n  handleViewUpdated({ pageNumber }) {\n    const { file } = this.state;\n    file.pageNumber = pageNumber;\n    this.setState({ file });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Container fluid>\n          <Row>\n            <Col md={4}>\n              <Container fluid className=\"sticky-top\">\n                <File\n                  file={this.state.file}\n                  onFileAttached={this.handleFileAttached}\n                />\n                <RangeRemover\n                  file={this.state.file}\n                  onPagesRemoval={this.handlePagesRemoval}\n                />\n                <Outliner\n                  file={this.state.file}\n                  onOutlinerUpdated={this.handleOutlinerUpdated}\n                />\n                <Saver file={this.state.file} />\n              </Container>\n            </Col>\n            <Col md={8}>\n              <Viewer\n                file={this.state.file}\n                onViewUpdated={this.handleViewUpdated}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}